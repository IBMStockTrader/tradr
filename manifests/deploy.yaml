#       Copyright 2018 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

#Deploy the pod
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tradr
  labels:
    solution: stock-trader
  annotations: { 
    prism.subkind: Node.js
  }
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: tradr
        version: v1
    spec:
      containers:
      - name: tradr
#       Note: this manifests/deploy.yaml will be used when we want to deploy this directly using kubectl or a helm chart. 
#             Microclimate uses the Charts folder so we can actually have both options
        image: ibmstocktrader/tradr:latest # Docker Hub
        #image: mycluster.icp:8500/stock-trader/tradr:latest # IBM Cloud Private
        # image: registry.ng.bluemix.net/stock_trader/tradr:latest # IBM Container Service
        ports:
          - containerPort: 3000
        imagePullPolicy: Always
        env:
          - name: JWT_ISSUER
            valueFrom:
              secretKeyRef:
                name: jwt
                key: issuer
          - name: JWT_AUDIENCE
            valueFrom:
              secretKeyRef:
                name: jwt
                key: audience
          - name: OIDC_NAME
            valueFrom:
              secretKeyRef:
                name: oidc
                key: name
          - name: OIDC_ISSUER
            valueFrom:
              secretKeyRef:
                name: oidc
                key: issuer
          - name: OIDC_AUTH
            valueFrom:
              secretKeyRef:
                name: oidc
                key: auth
          - name: OIDC_TOKEN
            valueFrom:
              secretKeyRef:
                name: oidc
                key: token
          - name: OIDC_ID
            valueFrom:
              secretKeyRef:
                name: oidc
                key: id
          - name: OIDC_SECRET
            valueFrom:
              secretKeyRef:
                name: oidc
                key: secret
          - name: OIDC_KEY
            valueFrom:
              secretKeyRef:
                name: oidc
                key: key
          - name: PROXY_HOST
            valueFrom:
              secretKeyRef:
                name: ingress-host
                key: host
---
#Deploy the service
apiVersion: v1
kind: Service
metadata:
  name: tradr-service
  labels:
    app: tradr
    solution: stock-trader
spec:
  type: NodePort
  ports:
    - port: 3000
      nodePort: 31007
  selector:
    app: tradr
---
#Configure the ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: tradr-ingress
  labels:
    solution: stock-trader
# annotations:
#   ingress.kubernetes.io/rewrite-target: /tradrr
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/affinity: "cookie"
    ingress.kubernetes.io/session-cookie-name: "route"
    ingress.kubernetes.io/session-cookie-hash: "sha1"
    #ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/secure-backends: "true"
    #ingress.kubernetes.io/app-root: "/tradr"
  
spec:
  rules:
  - host:
    http:
      paths:
      - path: /tradr
        backend:
          serviceName: tradr-service
          servicePort: 3000
